diff --git a/db.sqlite3 b/db.sqlite3
index 12ab93a..3ccd125 100644
Binary files a/db.sqlite3 and b/db.sqlite3 differ
diff --git a/dyluna/dyluna_app/forms/forms.py b/dyluna/dyluna_app/forms/forms.py
index cc67f3f..87d6f9e 100644
--- a/dyluna/dyluna_app/forms/forms.py
+++ b/dyluna/dyluna_app/forms/forms.py
@@ -1,5 +1,5 @@
 from django import forms
-
+from django.contrib.auth.models import User as authUser
 from ..models.models import *
 
 
@@ -16,4 +16,11 @@ class UserForm(forms.ModelForm):
     class Meta:
         model = User
         # exclude = ( 'user_role', )
+        exclude = ()
+
+
+class loginUserForm(forms.ModelForm):
+
+    class Meta:
+        model = authUser
         exclude = ()
\ No newline at end of file
diff --git a/dyluna/dyluna_app/migrations/0002_auto_20171221_0532.py b/dyluna/dyluna_app/migrations/0002_auto_20171221_0532.py
new file mode 100644
index 0000000..bf0bef2
--- /dev/null
+++ b/dyluna/dyluna_app/migrations/0002_auto_20171221_0532.py
@@ -0,0 +1,18 @@
+# Generated by Django 2.0 on 2017-12-21 04:32
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('dyluna_app', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='user',
+            name='diet',
+            field=models.ForeignKey(null=True, on_delete='CASCADE', to='dyluna_app.Diet'),
+        ),
+    ]
diff --git a/dyluna/dyluna_app/models/models.py b/dyluna/dyluna_app/models/models.py
index cdf0351..fb44a3a 100644
--- a/dyluna/dyluna_app/models/models.py
+++ b/dyluna/dyluna_app/models/models.py
@@ -5,9 +5,13 @@ class User(models.Model):
     id = models.AutoField(primary_key=True)
     name = models.CharField(max_length=255)
     last_name = models.CharField(max_length=255)
-    diet = models.ForeignKey('Diet', on_delete="CASCADE")
+    diet = models.ForeignKey('Diet', on_delete="CASCADE", null=True)
     user_role = models.ForeignKey('User_Role', on_delete="CASCADE")
 
+    def __str__(self):
+        return self.name + " " + self.last_name
+
+
 
 class User_Role(models.Model):
     id = models.AutoField(primary_key=True)
@@ -19,6 +23,9 @@ class Diet(models.Model):
     name = models.CharField(max_length=255)
     description = models.CharField(max_length=1000, blank=True)
 
+    def __str__(self):
+        return self.name + " - " + "".join(self.description.split(" ")[0:7])
+
 
 class Workshop(models.Model):
     id = models.AutoField(primary_key=True)
@@ -28,12 +35,17 @@ class Workshop(models.Model):
     description = models.CharField(max_length=1000, blank=True)
     equipment = models.ForeignKey('Equipment', on_delete="CASCADE", null=True)
 
+    def __str__(self):
+        return self.id + " " + self.name + " " + self.type
+
 
 class Type(models.Model): # czego to Type? :D TODO: zmienic nazwe na Workshop_Type
     id = models.AutoField(primary_key=True)
     name = models.CharField(max_length=255)
     description = models.CharField(max_length=255, blank=True)
 
+    def __str__(self):
+        return self.name + " - ".join(self.description.split(" ")[0:7])
 
 class Workshop_Schedule(models.Model):
     id = models.AutoField(primary_key=True)
@@ -48,6 +60,9 @@ class Equipment(models.Model):
     description = models.CharField(max_length=1000, blank=True)
     quantity = models.IntegerField()
 
+    def __str__(self):
+        return self.name + " ".join(self.description.split(" ")[0:7])
+
 
 class Place(models.Model):
     id = models.AutoField(primary_key=True)
diff --git a/dyluna/dyluna_app/templates/base_generic.html b/dyluna/dyluna_app/templates/base_generic.html
new file mode 100644
index 0000000..8b6be62
--- /dev/null
+++ b/dyluna/dyluna_app/templates/base_generic.html
@@ -0,0 +1,38 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+
+  {% block title %}<title>Local Library</title>{% endblock %}
+  <meta charset="utf-8">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
+  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
+  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
+
+  <!-- Add additional CSS in static file -->
+  {% load static %}
+  <link rel="stylesheet" href="{% static 'css/styles.css' %}">
+</head>
+
+<body>
+
+  <div class="container-fluid">
+
+    <div class="row">
+      <div class="col-sm-2">
+      {% block sidebar %}
+      <ul class="sidebar-nav">
+          <li><a href="{% url 'main' %}">Menu</a></li>
+          <li><a href="">Link 1</a></li>
+          <li><a href="">Link 2</a></li>
+      </ul>
+     {% endblock %}
+      </div>
+      <div class="col-sm-10 ">
+      {% block content %}{% endblock %}
+      </div>
+    </div>
+
+  </div>
+</body>
+</html>
\ No newline at end of file
diff --git a/dyluna/dyluna_app/templates/main.html b/dyluna/dyluna_app/templates/main.html
index b4aca9f..7345e7e 100644
--- a/dyluna/dyluna_app/templates/main.html
+++ b/dyluna/dyluna_app/templates/main.html
@@ -17,7 +17,15 @@
     <div class="container">
         <div class="jumbotron">
             <h1>Dyluna</h1>
-            <p>Główne menu:</p>
+            <p>Główne menu dla:</p>
+
+         {% if user.is_authenticated %}
+            <p><b> {{ user.get_username }} </b></p>
+            <a href="{% url 'logout'%}?next={{request.path}}">Wyloguj</a>
+            {% else %}
+                <a href="{% url 'login'%}?next={{request.path}}"><b>Zaloguj</b></a>
+         {% endif %}
+
             {% block menu %}
             <nav class="navbar navbar-default">
                 <div class="container-fluid">
diff --git a/dyluna/dyluna_app/templates/registration/logged_out.html b/dyluna/dyluna_app/templates/registration/logged_out.html
new file mode 100644
index 0000000..5d0d498
--- /dev/null
+++ b/dyluna/dyluna_app/templates/registration/logged_out.html
@@ -0,0 +1,7 @@
+{% extends "base_generic.html" %}
+
+{% block content %}
+<p>Wylogowano!</p>
+
+<a href="{% url 'login'%}">Kliknij tu aby zalogować się ponownie.</a>
+{% endblock %}
\ No newline at end of file
diff --git a/dyluna/dyluna_app/templates/registration/login.html b/dyluna/dyluna_app/templates/registration/login.html
new file mode 100644
index 0000000..26b7630
--- /dev/null
+++ b/dyluna/dyluna_app/templates/registration/login.html
@@ -0,0 +1,39 @@
+{% extends "base_generic.html" %}
+
+{% block content %}
+
+{% if form.errors %}
+<p>Your username and password didn't match. Please try again.</p>
+{% endif %}
+
+{% if next %}
+    {% if user.is_authenticated %}
+    <p>Your account doesn't have access to this page. To proceed,
+    please login with an account that has access.</p>
+    {% else %}
+    <p>Please login to see this page.</p>
+    {% endif %}
+{% endif %}
+
+<form method="post" action="{% url 'login' %}">
+{% csrf_token %}
+
+<div>
+  <td>{{ form.username.label_tag }}</td>
+  <td>{{ form.username }}</td>
+</div>
+<div>
+  <td>{{ form.password.label_tag }}</td>
+  <td>{{ form.password }}</td>
+</div>
+
+<div>
+  <input type="submit" value="login" />
+  <input type="hidden" name="next" value="{{ next }}" />
+</div>
+</form>
+
+{# Assumes you setup the password_reset view in your URLconf #}
+<p><a href="{% url 'password_reset' %}">Lost password?</a></p>
+
+{% endblock %}
\ No newline at end of file
diff --git a/dyluna/dyluna_app/templates/registration/password_reset_complete.html b/dyluna/dyluna_app/templates/registration/password_reset_complete.html
new file mode 100644
index 0000000..fa4beb4
--- /dev/null
+++ b/dyluna/dyluna_app/templates/registration/password_reset_complete.html
@@ -0,0 +1,7 @@
+{% extends "base_generic.html" %}
+{% block content %}
+
+<h1>The password has been changed!</h1>
+<p><a href="{% url 'login' %}">log in again?</a></p>
+
+{% endblock %}
\ No newline at end of file
diff --git a/dyluna/dyluna_app/templates/registration/password_reset_confirm.html b/dyluna/dyluna_app/templates/registration/password_reset_confirm.html
new file mode 100644
index 0000000..b72a59e
--- /dev/null
+++ b/dyluna/dyluna_app/templates/registration/password_reset_confirm.html
@@ -0,0 +1,33 @@
+{% extends "base_generic.html" %}
+
+{% block content %}
+
+    {% if validlink %}
+        <p>Please enter (and confirm) your new password.</p>
+        <form action="" method="post">
+            <div style="display:none">
+                <input type="hidden" value="{{ csrf_token }}" name="csrfmiddlewaretoken">
+            </div>
+            <table>
+                <tr>
+                    <td>{{ form.new_password1.errors }}
+                        <label for="id_new_password1">New password:</label></td>
+                    <td>{{ form.new_password1 }}</td>
+                </tr>
+                <tr>
+                    <td>{{ form.new_password2.errors }}
+                        <label for="id_new_password2">Confirm password:</label></td>
+                    <td>{{ form.new_password2 }}</td>
+                </tr>
+                <tr>
+                    <td></td>
+                    <td><input type="submit" value="Change my password" /></td>
+                </tr>
+            </table>
+        </form>
+    {% else %}
+        <h1>Password reset failed</h1>
+        <p>The password reset link was invalid, possibly because it has already been used. Please request a new password reset.</p>
+    {% endif %}
+
+{% endblock %}
\ No newline at end of file
diff --git a/dyluna/dyluna_app/templates/registration/password_reset_done.html b/dyluna/dyluna_app/templates/registration/password_reset_done.html
new file mode 100644
index 0000000..8e13dc9
--- /dev/null
+++ b/dyluna/dyluna_app/templates/registration/password_reset_done.html
@@ -0,0 +1,4 @@
+{% extends "base_generic.html" %}
+{% block content %}
+<p>We've emailed you instructions for setting your password. If they haven't arrived in a few minutes, check your spam folder.</p>
+{% endblock %}
\ No newline at end of file
diff --git a/dyluna/dyluna_app/templates/registration/password_reset_email.html b/dyluna/dyluna_app/templates/registration/password_reset_email.html
new file mode 100644
index 0000000..61fba5c
--- /dev/null
+++ b/dyluna/dyluna_app/templates/registration/password_reset_email.html
@@ -0,0 +1,2 @@
+Someone asked for password reset for email {{ email }}. Follow the link below:
+{{ protocol}}://{{ domain }}{% url 'password_reset_confirm' uidb64=uid token=token %}
\ No newline at end of file
diff --git a/dyluna/dyluna_app/templates/registration/password_reset_form.html b/dyluna/dyluna_app/templates/registration/password_reset_form.html
new file mode 100644
index 0000000..aada41c
--- /dev/null
+++ b/dyluna/dyluna_app/templates/registration/password_reset_form.html
@@ -0,0 +1,10 @@
+{% extends "base_generic.html" %}
+{% block content %}
+
+<form action="" method="post">{% csrf_token %}
+    {% if form.email.errors %} {{ form.email.errors }} {% endif %}
+        <p>{{ form.email }}</p> 
+    <input type="submit" class="btn btn-default btn-lg" value="Reset password" />
+</form>
+
+{% endblock %}
\ No newline at end of file
diff --git a/dyluna/dyluna_app/templates/users.html b/dyluna/dyluna_app/templates/users.html
index 9d6dfd4..6568aed 100644
--- a/dyluna/dyluna_app/templates/users.html
+++ b/dyluna/dyluna_app/templates/users.html
@@ -33,7 +33,7 @@
     {% endblock %}
     {% block table %}
     <div class="container">
-    <h2>Lista zleceń</h2>
+    <h2>Lista osób</h2>
     <table class="table">
       <thead>
       <tr>
diff --git a/dyluna/dyluna_app/templates/workshop.html b/dyluna/dyluna_app/templates/workshop.html
index a0a2762..6af6609 100644
--- a/dyluna/dyluna_app/templates/workshop.html
+++ b/dyluna/dyluna_app/templates/workshop.html
@@ -31,7 +31,7 @@
     {% endblock %}
     {% block table %}
     <div class="container">
-    <h2>Lista zleceń</h2>
+    <h2>Lista zajęć</h2>
     <table class="table">
       <thead>
       <tr>
diff --git a/dyluna/dyluna_app/views.py b/dyluna/dyluna_app/views.py
index e4aaec4..ef59ffe 100644
--- a/dyluna/dyluna_app/views.py
+++ b/dyluna/dyluna_app/views.py
@@ -3,11 +3,13 @@ from django.shortcuts import HttpResponse
 from django.http import HttpResponse
 from django.views import View
 from .models.models import User, Workshop
-from .forms.forms import DietForm, UserForm
+from .forms.forms import DietForm, UserForm, loginUserForm
 from django.shortcuts import get_object_or_404
 from django.views.generic import ListView
 from django.views.generic import TemplateView
 
+from django.contrib.auth.decorators import login_required
+
 
 def index(request):
     return HttpResponse("Hello world!")
@@ -21,7 +23,7 @@ def blank(request):
 #     form = DietForm()
 #     return render(request, '../templates/form_template.html', {'form': form, 'name': 'diet'})
 
-
+@login_required
 def diet_new(request):
     if request.method == "POST":
         form = DietForm(request.POST)
@@ -45,7 +47,7 @@ def user_new(request):
         form = UserForm()
     return render(request, 'templates/form_template.html', {'form': form, "name":"user"})
 
-
+@login_required
 def main(request):
     return render(request, 'main.html')
 
@@ -81,23 +83,37 @@ class Users_Filter_Display(ListView):
         })'''
 
 
+@login_required
 def users_students(request):
     return render(request, 'menu_users_students.html', {
         'users': User.objects.filter(user_role__role_name="UCZESTNIK")
     })
 
-
+@login_required
 def users_teachers(request):
     return render(request, 'menu_users_teachers.html', {
         'users': User.objects.filter(user_role__role_name="KOORDYNATOR")
     })
 
 
+@login_required
 def workshop(request):
     return render(request, 'workshop.html', {
         'workshops': Workshop.objects.all()
     })
 
-
+@login_required
 def workshop_schedule(request):
-    return HttpResponse("Workshop Schedules")
\ No newline at end of file
+    return HttpResponse("Workshop Schedules")
+
+
+def register_user(request):
+    if request.method == "POST":
+        form = loginUserForm(request.POST)
+        if form.is_valid():
+            loginUser = form.save()
+            return HttpResponse("Nowy login-użytkownik utworzony <a href='/main'>Wróc do menu głownego</a>")
+            # return redirect('diet_detail', pk=user.pk)
+    else:
+        form = loginUserForm()
+    return render(request, 'templates/form_template.html', {'form': form, "name":"login-user"})
diff --git a/dyluna/settings.py b/dyluna/settings.py
index 6cfc4f8..602b58f 100644
--- a/dyluna/settings.py
+++ b/dyluna/settings.py
@@ -100,6 +100,8 @@ AUTH_PASSWORD_VALIDATORS = [
     },
 ]
 
+# Redirect to home URL after login (Default redirects to /accounts/profile/)
+LOGIN_REDIRECT_URL = '/'
 
 # Internationalization
 # https://docs.djangoproject.com/en/2.0/topics/i18n/
@@ -125,4 +127,7 @@ STATICFILES_DIRS = (
     os.path.join(BASE_DIR, 'static'),
 )
 
-STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
\ No newline at end of file
+STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
+
+EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' # will just show mails on console rather than sending them
+
diff --git a/dyluna/static/styles.css b/dyluna/static/styles.css
new file mode 100644
index 0000000..d7009ee
--- /dev/null
+++ b/dyluna/static/styles.css
@@ -0,0 +1,5 @@
+.sidebar-nav {
+    margin-top: 20px;
+    padding: 0;
+    list-style: none;
+}
\ No newline at end of file
diff --git a/dyluna/urls.py b/dyluna/urls.py
index 803a7e7..d2c5d91 100644
--- a/dyluna/urls.py
+++ b/dyluna/urls.py
@@ -13,7 +13,7 @@ Including another URLconf
     1. Import the include() function: from django.urls import include, path
     2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
 """
-from django.conf.urls import url
+from django.conf.urls import url, include
 from django.contrib import admin
 from django.conf import settings
 from .dyluna_app.views import Users_Display
@@ -23,8 +23,9 @@ from dyluna.dyluna_app import views
 
 
 urlpatterns = [
-    url(r'^$', views.blank  ),
+    url(r'^$', views.main ), #so just basically redirects
 
+    url(r'^register', views.register_user  ),
     url(r'^user/new/$', views.user_new, name="user_new "),
 
     url(r'^diet/new/$', views.diet_new, name="diet_new "),
@@ -34,13 +35,14 @@ urlpatterns = [
     url(r'^index', views.index ),
 
     url(r'^admin', admin.site.urls, name='admin_panel'),
-    url(r'^main', views.main  ),
+    url(r'^main', views.main, name="main" ),
     url('menu', Users_Display.as_view()),
     url(r'^students', views.users_students  ),
     url(r'^teachers', views.users_teachers  ),
     url(r'^workshop', views.workshop  ),
     url(r'^menu/workshop_schedules', views.workshop_schedule  ),
 
+    url(r'^accounts/', include('django.contrib.auth.urls') )
 
 ] + static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)
 
